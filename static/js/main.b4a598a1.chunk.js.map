{"version":3,"sources":["sheet.js","App.js","reportWebVitals.js","index.js"],"names":["Sheet","props","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","placeholder","value","onChange","e","target","onPressEnter","handleSearch","width","marginBottom","display","type","onClick","icon","SearchOutlined","size","handleReset","closeDropdown","setState","searchText","searchedColumn","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","state","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","sheet","Tabletop","init","key","simpleSheet","then","data","catch","err","console","warn","columns","title","this","sorter","a","b","stock","href","dataSource","React","Component","Header","Layout","Content","Footer","App","className","theme","mode","Item","marginTop","height","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4a598a1.chunk.js","sourcesContent":["import React from 'react';\r\nimport Tabletop from 'tabletop';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport './App.css';\r\n\r\nexport default class Sheet extends React.Component  {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state  = {\r\n      sheet: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    Tabletop.init({\r\n      key: \"1BNRBr8FX6VrNXGjJ3jmV3X-Sr_jiGPPhiDgpHN2nQL4\",\r\n      simpleSheet: true\r\n    })\r\n      .then((data) => this.setState({sheet: data}))\r\n      .catch((err) => console.warn(err));\r\n  }\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: 'product_name',\r\n        dataIndex: 'product_name',\r\n        key: 'product_name',\r\n        width: '20%',\r\n        ...this.getColumnSearchProps('product_name'),\r\n      },\r\n      {\r\n        title: 'stock',\r\n        dataIndex: 'stock',\r\n        key: 'stock',\r\n        sorter: (a, b) => a.stock - b.stock,\r\n      },\r\n      {\r\n        title: 'description',\r\n        dataIndex: 'description',\r\n        key: 'description',\r\n        ...this.getColumnSearchProps('description'),\r\n      },\r\n      {\r\n        title: 'img',\r\n        dataIndex: 'img',\r\n        key: 'img',\r\n      },\r\n      {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (text, record) => (\r\n          <Space size=\"middle\">\r\n            <a href=\"https://www.google.com/\">Edit</a>\r\n            <a href=\"https://www.google.com/\">Delete</a>\r\n          </Space>\r\n        ),\r\n      },\r\n    ];\r\n    return <Table columns={columns} dataSource={this.state.sheet} />;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Layout, Menu} from 'antd';\r\nimport Sheet from './sheet';\r\nimport './App.css';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nclass App extends React.Component  {\r\n  render() {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Header>\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" mode=\"horizontal\">\r\n            <Menu.Item key=\"1\">Bob's awesome inventory</Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Content style={{ marginTop: '5vh', height:'100vh',padding: '0 50px' }}>\r\n          <Sheet/>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>Bob's inventory Â©2021 Created by HUSCII</Footer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}